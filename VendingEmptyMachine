import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class VendingEmptyMachine {

    public static final int amount = 43534587;
    public static JTextArea textArea;

    public static void main(String[] args) {
        new VendingEmptyMachine();

        Map<Integer, Integer> denominations = calculateDenominations(amount);
        displayDenominations(denominations);
    }

    JFrame frame = new JFrame();
    JLabel label = new JLabel("Total Money Inserted: " + amount);
    JLabel label2 = new JLabel("Made up of the following denominations:");

    public VendingEmptyMachine() {
        frame.setTitle("Empty Machine");
        frame.setSize(500, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        textArea = new JTextArea(); // Initialize the static textArea here
        textArea.setPreferredSize(new Dimension(250, 250));
        textArea.setEditable(false);

        frame.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);

        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.CENTER;
        frame.add(label, gbc);

        gbc.gridy = 1;
        frame.add(label2, gbc);

        gbc.gridy = 2;
        frame.add(textArea, gbc);

        frame.setVisible(true);
    }

    public static Map<Integer, Integer> calculateDenominations(int amount) {
        int[] notes = { 1000, 500, 100, 50, 10, 5, 1 };
        Map<Integer, Integer> denominations = new HashMap<>();

        for (int note : notes) {
            int count = amount / note;
            if (count > 0) {
                denominations.put(note, count);
                amount %= note;
            }
        }

        return denominations;
    }

    public static void displayDenominations(Map<Integer, Integer> denominations) {
        StringBuilder sb = new StringBuilder("Denominations:\n");
        for (Map.Entry<Integer, Integer> entry : denominations.entrySet()) {
            int note = entry.getKey();
            int count = entry.getValue();
            sb.append(note).append(" : ").append(count).append("\n");
        }
        textArea.setText(sb.toString());
    }
}
